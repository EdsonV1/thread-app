version: '3.8'  # Docker Compose file version

services:
  backend:  # Configuration for the backend service
    build: ./backend  # Dockerfile location for building the backend service
    container_name: backend_container  # Name for the backend service container
    ports:
      - "4000:4000"  # Maps host machine's port 4000 to container's port 4000
    volumes:
      - ./backend:/app  # Mounts local ./backend directory into /app directory in the container
      - ./backend/node_modules:/app/node_modules  # Persists node_modules directory
    env_file:
      - .env
    #depends_on:
      #- mongodb  # Indicates dependency on 'mongodb' service
    #environment:
      #- MONGO_URI=mongodb://mongodb:27017/mydatabase  # Sets MongoDB connection URL

  frontend:  # Configuration for the frontend service
    build: ./frontend  # Dockerfile location for building the frontend service
    container_name: frontend_container  # Name for the frontend service container
    ports:
      - "3000:3000"  # Maps host machine's port 3000 to container's port 3000
    stdin_open: true  # Keeps STDIN open even if not attached (useful for allowing input)
    tty: true  # Allocates a pseudo-TTY for the frontend service container

  #mongodb:  # Configuration for the MongoDB service
    #image: mongo:latest  # Docker image to use for the MongoDB service
    #container_name: mongodb_container  # Name for the MongoDB service container
    #ports:
      #- "27017:27017"  # Maps host machine's port 27017 to container's port 27017
    #environment:
      #- MONGO_INITDB_ROOT_USERNAME=rootuser
      #- MONGO_INITDB_ROOT_PASSWORD=rootpassword
      #- MONGO_INITDB_ROOT_DATABASE=threadDB
    #volumes:
      #- mongodb_data:/data/db  # Uses a volume 'mongodb_data' for persistent MongoDB storage

#volumes:
  #mongodb_data:  # Defines the 'mongodb_data' volume for MongoDB data persistence
